version: "3.4"

services:
  redis:
    image: redis:latest
  web:
    image: jhnnsrs/bergen
    command: python manage.py runserver 0.0.0.0:8000
    env_file:
      - arnheim.env
      - development.env
    volumes:
      - ./bergen:/code
      - ./database:/code/db
      - media:/code/media
      - files:/code/files
    links:
      - redis
      - worker
      - hdfserver
  relay:
    image: jhnnsrs/bergen
    command: python manage.py relay
    env_file:
      - arnheim.env
      - development.env
    volumes:
      - ./bergen:/code
      - ./database:/code/db
      - media:/code/media
      - files:/code/files
    links:
      - kafka
      - redis
      - worker
      - hdfserver
  working:
    image: jhnnsrs/bergen
    command: python work.py
    env_file:
      - arnheim.env
      - development.env
    volumes:
      - ./bergen:/code
      - ./database:/code/db
      - media:/code/media
      - files:/code/files
    links:
      - kafka
      - redis
      - worker
      - hdfserver
  worker:
    image: jhnnsrs/bergen
    command: python manage.py runworker maxisp bioconverter nifti image test prewitt linerect masking transformimage lengthdata analyzer slicedmaxisp mapping sliceline kafka kafkain masker clusterdata pandas profiler excelexport importer intensityprofiler
    env_file:
      - arnheim.env
      - development.env
    volumes:
      - ./bergen:/code
      - media:/code/media
      - ./database:/code/db
      - files:/code/files
    links:
      - redis
      - hdfserver
  nginx:
    image: nginx:latest
    volumes:
      - ./config/nginx.conf:/etc/nginx/nginx.conf
      - media:/media
    ports:
      - 80:80
      - 443:443
    links:
      - web
      - worker
      - hdfserver
      - notebook
      - daskscheduler
  notebook:
    image: jhnnsrs/jupjup
    command: jupyter lab --port=90 --ip=0.0.0.0 --allow-root --notebook-dir=/notebooks/
    environment:
      - HOME=home
      - DASK_SCHEDULER_ADDRESS="tcp://daskscheduler:8786"
    env_file:
      - arnheim.env
      - development.env
    volumes:
      - ./notebooks:/notebooks
      - ./bergen:/code/
      - ./jupjup:/config/
      - ./database:/code/db
      - media:/code/media
      - files:/code/files
    ports:
      - 90:90
    links:
      - web
      - worker
      - hdfserver
      - daskscheduler
  hdfserver:
    build: hdfserver
    command: python h5serv --datapath=/data
    env_file:
      - arnheim.env
      - development.env
    volumes:
      - media:/data
      - ./hdfserver:/usr/local/src/h5serv
      - ./config/h5serv-conf.py:/usr/local/src/h5serv/h5serv/config.py
  daskscheduler:
    image: jhnnsrs/dask
    ports:
      - "8786:8786"
      - "8787:8787"
    command: dask-scheduler --dashboard-prefix=daskboard
  daskworker:
    image: jhnnsrs/dask
    command: ["dask-worker", "tcp://daskscheduler:8786"]
    volumes:
      - ./notebooks:/notebooks
      - ./bergen:/code/
      - ./jupjup:/config/
      - ./database:/code/db
      - media:/code/media
      - files:/code/files
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - 2181:2181
  kafka:
    image: wurstmeister/kafka
    environment:
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_CREATE_TOPICS: "test:1:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    links:
      - zookeeper

volumes:
  vscode:
  dbdata:
  media:
    driver_opts:
      type: none
      device: /c/Users/jhnns/PycharmProjects/arnheim/media
      o: bind
  files:
    driver_opts:
      type: none
      device: /c/Users/jhnns/PycharmProjects/arnheim/files
      o: bind
