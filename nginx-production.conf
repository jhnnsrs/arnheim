upstream channels-backend {
    server web:8000;
}

server {
    listen 80;
    server_name johannesroos.de;

    location / {
        return 301 https://$host$request_uri;
    }

    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
}

server {
  listen 443 ssl;
  server_name           johannesroos.de;

  ssl_certificate /etc/letsencrypt/live/johannesroos.de/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/johannesroos.de/privkey.pem;
  include /etc/letsencrypt/options-ssl-nginx.conf;
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

  client_max_body_size 8000M;
  client_body_buffer_size 8000M;
  client_body_timeout 120;

  add_header X-Clacks-Overhead "GNU Terry Pratchett";
  add_header X-Clacks-Overhead "GNU Terry Pratchet";
  add_header 'Access-Control-Allow-Credentials' 'true';
  add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

  location /images {
    alias /media/;
  }

  location / {
        try_files $uri @proxy_to_app;
  }



  location @proxy_to_app {
        proxy_pass http://channels-backend;

        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";

        proxy_redirect off;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Host $server_name;
  }


  # Upload form should be submitted to this location
  location /api/upload {


        add_header Access-Control-Allow-Origin *;
        add_header 'Access-Control-Allow-Credentials' 'true';
        add_header 'Access-Control-Allow-Headers' 'Authorization,DNT,X-CustomHeader,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';

        # After upload, pass altered request body to this django view
        upload_pass   /uploaded/;

        # Store files to this directory
        # The directory is hashed, subdirectories 0 1 2 3 4 5 6 7 8 9 should exist
        upload_store /media/_upload 1;
        upload_store_access user:rw group:rw all:rw;

        # Set specified fields in request body
        upload_set_form_field $upload_field_name.name "$upload_file_name";
        upload_set_form_field $upload_field_name.content_type "$upload_content_type";
        upload_set_form_field $upload_field_name.path "$upload_tmp_path";

        # Inform backend about hash and size of a file
        upload_aggregate_form_field "$upload_field_name.md5" "$upload_file_md5";
        upload_aggregate_form_field "$upload_field_name.size" "$upload_file_size";

        # Here is where you define additional fields to pass through to upload_complete
        upload_pass_form_field "^submit$|^description$";
        upload_pass_form_field "^name$";
        upload_pass_form_field "^creator$";
        upload_pass_form_field "^experiment$";
        upload_pass_form_field "^terminal$";
        upload_cleanup 400-599;


    }

}
